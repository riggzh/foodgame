function calculateMenu(r){var i=r.ingredients,e=filterRecipes(r.recipes,r.ingredients),a=r.chefs,t=r.mode,n=a.length,o=0,s=new Array;for(var l in a){if("all"==t){var c=Math.floor(100*(Math.floor(l)+1)/n);c>o&&(o=c,postMessage({progress:{value:c,display:Math.floor(l)+1+" / "+n}}))}var f=new Array;for(var u in e){var d=getQualityInfo(e[u],a[l]);if(0!=d.qualityVal){var v=1;r.recipesMulitple&&(v=e[u].total);var h=getChefSkillAddition(e[u],a[l],i),p=0;if(r.hasRecipesAddition&&(p+=Math.floor(e[u].addition)),r.hasChefsAddition&&(p+=Math.floor(a[l].addition)),r.hasIngredientsAddition){var g=getIngredientsAddition(e[u],i,r.ingredientsAdditionCumulative);p+=g}var m=new Object;m.data=e[u],m.qualityVal=d.qualityVal,m.qualityDisp=d.qualityDisp,m.qualityAddition=d.qualityAddition,m.qualityAdditionDisp=d.qualityAddition||"",m.skillAddition=h,m.skillAdditionDisp=h||"",m.otherAddition=p,m.otherAdditionDisp=p||"",m.quantity=v,m.totalPrice=e[u].price*v,m.realTotalPrice=Math.ceil(e[u].price*(1+d.qualityAddition+h))*v,m.bonusScore=Math.ceil(e[u].price*p)*v,m.totalScore=m.realTotalPrice+m.bonusScore,f.push(m)}}f.sort(function(r,i){return i.totalScore-r.totalScore});var A=9;"all"==t&&(A=r.limit);var y=Math.min(A,f.length);f=f.slice(0,y);var M=new Object;M.chef=a[l],M.recipes=f,"optimal"==t&&(M.min3sum=getMin3Sum(f),M.max3sum=getMax3Sum(f)),s.push(M)}if("optimal"==t){if(s.length>3){s.sort(function(r,i){return i.min3sum-r.min3sum});var b=getMin3Limit(s.slice(0,3));for(var w in s)s[w].max3sum<=b&&s.splice(w,1)}var S=new Array,q=new Array,k=0,I=combinations(s,3);n=I.length;for(var l in I){var c=Math.floor(100*(Math.floor(l)+1)/n);postMessage({progress:{value:c,display:Math.floor(l)+1+" / "+n}});var x=new Array,P=0;for(var u in I[l]){var O=combinations(I[l][u].recipes,3);P+=I[l][u].max3sum,x.push(O)}if(!(P<=k)){var j=cartesianProduct(x);for(var u in j){var D=new Array,C=!0,R=0,V=j[u];for(var w in V){var f=V[w];for(var L in f){if(!(D.indexOf(f[L].data.recipeId)<0)){C=!1;break}D.push(f[L].data.recipeId),R+=f[L].totalScore}if(!C)break}C&&R>k&&(k=R,q=V,S=I[l])}}}s=new Array;for(var l in S){var M=new Object;M.chef=S[l].chef,M.recipes=q[l],s.push(M)}}var T=new Array;for(var l in s)for(var u in s[l].recipes){var Q=new Object;Q.chef=s[l].chef,Q.recipe=s[l].recipes[u],T.push(Q)}postMessage({menu:T})}function getMin3Sum(r){for(var i=0,e=r.length-3>0?r.length-3:0,a=e;a<r.length;a++)i+=r[a].totalScore;return i}function getMax3Sum(r){for(var i=0,e=r.length>3?3:r.length,a=0;a<e;a++)i+=r[a].totalScore;return i}function getMin3Limit(r){var i=0,e=new Array;for(var a in r){var t=combinations(r[a].recipes,3);e.push(t)}var n=cartesianProduct(e);for(var o in n){var s=new Array,l=!0,c=0,f=n[o];for(var u in f){var d=f[u];for(var v in d){if(!(s.indexOf(d[v].data.recipeId)<0)){l=!1;break}s.push(d[v].data.recipeId),c+=d[v].totalScore}if(!l)break}l&&c>i&&(i=c)}return i}function getIngredientsAddition(r,i,e){var a=0;for(var t in r.ingredients)for(var n in i)if(r.ingredients[t].name==i[n].name){if(e){a+=Math.floor(i[n].addition);break}return Math.floor(i[n].addition)}return a}function filterRecipes(r,i){var e=new Array;for(var a in r){var t=!0;for(var n in r[a].ingredients){var o=!1;for(var s in i)if(r[a].ingredients[n].name==i[s].name){o=!0;break}if(!o){t=!1;break}}t&&e.push(r[a])}return e}function combinations(r,i){var e,a,t,n,o;if(i>r.length||i<=0)return[];if(i==r.length)return[r];if(1==i){for(t=[],e=0;e<r.length;e++)t.push([r[e]]);return t}for(t=[],e=0;e<r.length-i+1;e++)for(n=r.slice(e,e+1),o=combinations(r.slice(e+1),i-1),a=0;a<o.length;a++)t.push(n.concat(o[a]));return t}function cartesianProduct(r){var i,e,a,t,n,o=[];if(!r||0==r.length)return r;for(n=r.splice(0,1)[0],r=cartesianProduct(r),i=0,a=n.length;i<a;i++)if(r&&r.length)for(e=0,t=r.length;e<t;e++)o.push([n[i]].concat(r[e]));else o.push([n[i]]);return o}importScripts("food.min.js"),onmessage=function(r){calculateMenu(r.data)};